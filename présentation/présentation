ProjetFinAnnée2020 - Config'o'Matic
Notre groupe : Chabeau Calvin, Basnet Devashish, Borca Mark, Salhi Adel

Notre projet est de réaliser un site répertoriant une série de composants afin de réaliser des configurations personnalisées.
Les prix des différents composants seront également ajouté afin de pouvoir visualiser le prix total d'une configuration.

Nous avons donc besoin d'une base de données composé de plusieurs tables, celles-ci serviront à répertorier les informations des users,
ainsi que les différents composants, leurs détails et leurs prix. Le site est donc une version personnalisé et 
simplifié de ce que propose le Configomatic de TopAchat.

Pour cela nous avons donc choisis de proposer 7 types de composant pour la réalisation des configs.
Chaque type de composant proposera jusqu'a 8 choix différents (différentes marques/prix).

Le site permettra de rentrer un 'pseudo de config' afin d'attribuer un nom à votre config pour pouvoir la récuperer sur le site,
il sera possible de composé sa config via une liste déroulante pour chaque composants qui seront affichés dans un récapitulatif associé à 
un bouton qui permettra de sauvegarder sa config dans la base de données. 
Une config est donc récuperable via son pseudo, et sera affiché en bas de page.


LISTE ET DESCRIPTIONS DES WEBSERVICES SQL :

-recup_config          paramètre : nom          type : JSON  | --> Appel la procédure qui récupère les configId en fonction d'un nom entré en paramètre.
-recup_composant       paramètre : config       type : JSON  | --> Appel la procédure qui récupère les libellé des différents composé en fonction du configId entré en paramètre.
-ram                   paramètre : /            type : JSON  | --> Appel la procedure proc_ram qui renvoie RamId ,RamName , RamPrix ,capacite
-processeurs           paramètre : /            type : JSON  | --> Appel la procedure proc_processeurs qui renvoie ProcesseurId ,ProcesseurName , ProcesseurPrix ,socket
-page                  paramètre: url           type : JSON  | --> appel la procedure getPage qui permet de récuperer le chemin de notre html
-js                    paramètre : url          type : RAW   | --> appel la procedure getJS qui permet de récuperer le chemin de notre js
-img                   paramètre : url          type : RAW   | --> appel la procedure getIMG qui permet de récuperer le chemin de notre dossier IMG
-enregistrer_nom       paramètre : usr          type : JSON   | --> appel la procédure SaveName qui insert usr
-enregistrer_config    paramètres : pseudo, Processeur, Boitier, Ram, CarteGraphique, CarteMere, DisqueDur  type : RAW  --> Enregistre la configuration de l'utilisateur
-disqueDur             paramètre : /            type : JSON  | --> Appel la procedure proc_DisqueDur qui renvoie DisqueDurId ,DisqueDurName , DisqueDurPrix ,capacite
-css                   paramètre : url          type : RAW   | --> appel la procedure getCSS qui permet de récuperer le dossier CSS
-check_pseudo          paramètre : usr          type : JSON   | --> appel la procedure checkPseudo qui envoie un boléan
-carteMere             paramètre : /            type : JSON  | -->  Appel la procedure proc_CM qui renvoie carteMereId ,carteMereName ,carteMerePrix , socket
-CarteGraphique        paramètre : /            type : JSON  | --> Appel la procedure proc_CarteGraphique qui renvoie CarteGraphiqueId ,CarteGraphiqueName , CarteGraphiquePrix , memoire
-boitier               paramètre : /            type : JSON  | --> Appel la procedure proc_boitier qui renvoie boitierId ,boitierName , boitierPrix ,largeur , longueur
-ajouter_processeur    paramètre : procName,procPrix,:socket                              type : JSON  | --> Appel la procedure ajouter_processeur qui enregistre le produit introduit
-ajouter_CG            paramètre : CGName,CGPrix,CGMemoire                                type : JSON  | --> Appel la procedure ajouter_CG qui enregistre le produit introduit
-ajouter_MV            paramètre : MVName,MVPrix,MVcapacite                               type : JSON  | --> Appel la procedure ajouter_MV qui enregistre le produit introduit
-ajouter_DD            paramètre : DDName,DDPrix,DDCapacite                               type : JSON  | --> Appel la procedure ajouter_DD qui enregistre le produit introduit
-ajouter_CM            paramètre : CMName,CMPrix,CMsocket                                 type : JSON  | --> Appel la procedure ajouter_CM qui enregistre le produit introduit
-ajouter_boitier       paramètre : BoitierName,BoitierPrix,BoitierLargeur,BoitierHauteur  type : JSON  | --> Appel la procedure ajouter_boitier qui enregistre le produit introduit

LISTE ET DESCRITPIONS TABLES SQL :
-tbBoitier           --> repertorie une liste de differents boitiers, elle contient leurs Id, leurs noms , ainsi que leurs prix et des details sur le produit.
-tbCarteGraphique    --> repertorie une liste des différentes cartes graphiques, elle contient leurs Id, leurs noms, leurs prix et des informations complémentaires.
-tbCarteMere         --> repertorie une liste des cartes mères, elle contient leurs Id, leurs noms, leurs prix et des informations complémentaires.
-tbConfig            --> repertorie une liste des configs enregistrées, elle contient les id des configs ainsi que tous les id des composants lié aux configs.
-tbDisqueDur         --> repertorie une liste des disques durs, elle contient leurs Id, leurs noms, leurs prix et des informations complémentaires.
-tbPprocesseur       --> repertorie une liste processeurs, elle contient leurs Id, leurs noms, leurs prix et des informations complémentaires.
-tbRam               --> repertorie une liste des barettes de mémoire vive, elle contient leurs Id, leurs noms, leurs prix et des informations complémentaires.
-tbUser              --> repertorie une liste des utilisateurs, elle contient leurs id, leurs pseudo et l'id de la config qui leurs est attribué.

